
  # Default values for votingapp_helm.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1
  labelsAll: "demo-voting-app"
#==================================
# voting app zone
  labelVotingApp: "voting-app"

# image for voting-app
  imageVotingApp:
    repository: kodekloud/examplevotingapp_vote
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1"
  # service for voting-app
  serviceVotingApp:
    #type: NodePort
    type: NodePort
    port: 80
    nodePort: 30004

#==================================

# result app zone
  labelResultApp: "result-app"

# image for Result-app
  imageResultApp:
    repository: kodekloud/examplevotingapp_result
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1"
  # service for voting-app
  serviceResultApp:
    #type: NodePort
    type: NodePort
    port: 80
    nodePort: 30005

#==================================

# worker app zone
  labelWorkerApp: "worker-app"

# image for worker-app
  imageWorkerApp:
    repository: kodekloud/examplevotingapp_worker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1"

#==================================

# redis app zone
  labelRedisApp: "redis-app"

# image for redis-app
  imageRedisApp:
    repository: redis
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  # service for redis-app
  nameServiceRedis: "redis"
  serviceRedisApp:
    #type: NodePort
    type: ClusterIP
    port: 6379

#==================================

# postgres app zone
  labelPostgresApp: "postgres-app"

# image for postgres-app
  imagePostgresApp:
    repository: postgres
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  # service for postgres-app
  nameServicePostgres: "db"
  servicePostgresApp:
    #type: NodePort
    type: ClusterIP
    port: 5432
  envPostgres: 
    - name: POSTGRES_USER
      value: "postgres"
    - name: POSTGRES_PASSWORD
      value: "postgres"
    - name: POSTGRES_HOST_AUTH_METHOD
      value: trust

#==================================


  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
